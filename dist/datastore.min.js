/*! datastore - v0.2.0 - 02-09-2013 */
!function(){!function(a,b){return a.udefine.globals[b.toLowerCase()]=a[b],a.udefine.inject[b.toLowerCase()]={name:b,root:a}}(this,"DataStore")}.call(this),function(){var a;a=function(a){return a.replace(/-/g,"").replace(/_/g,"").toLowerCase()},udefine("datastore",["mixer","eventmap"],function(b,c){var d;return d=function(){function d(a){b(d.prototype,new c),this.data={collection:{},state:{}},a&&("string"==typeof a?this.fromString(a):this.set(a))}return d.prototype.fromString=function(a){var b;try{return this.data.collection=JSON.parse(a)}catch(c){return b=c,console.error("Error while parsing content: "+b)}},d.prototype.toString=function(){var a;try{return JSON.stringify(this.data.collection)}catch(b){return a=b,console.error("Error while serializing data: "+a)}},d.prototype.add=function(b,c,d){return null==d&&(d="rw"),this.exists(b)?void 0:(this.trigger("add",b,c),this.data.collection[b]=c,"readonly"===a(d)&&(d="ro"),"writeonly"===a(d)&&(d="wo"),this.data.state[b]=d)},d.prototype.exists=function(a){return this.trigger("exists",a),Object.hasOwnProperty.call(this.data.collection,a)},d.prototype.has=d.exists,d.prototype.remove=function(a){return this.trigger("remove",a),delete this.data.collection[a]},d.prototype.keys=function(){return Object.keys(this.data.collection)},d.prototype.get=function(a){return"wo"!==data.state[a]?(this.trigger("get",a),this.data.collection[a]):void 0},d.prototype.set=function(a,b){var c,d;if(b)this.exists(a)?"ro"!==this.data.state[a]&&(this.data.collection[a]=b,this.trigger("set",a,b),this.trigger("change",a,b)):this.add(a,b);else for(c in a)d=a[c],this.set.call(this,c,d);return null},d.prototype.each=function(a){var b,c,d;d=this.data.collection;for(b in d)c=d[b],a(b,c);return null},d.prototype.map=function(a){var b,c,d,e;c={},e=data.collection;for(b in e)d=e[b],c[b]=a(b,d);return c},d.prototype.filter=function(a){var b,c,d,e,f,g;for(c={},g=data.collection,d=e=0,f=g.length;f>e;d=++e)b=g[d],a(data.collection[b])||(c[b]=data.collection[b]);return c},d.prototype.isEmpty=function(){return 0===this.keys().length},d}()})}.call(this);